import Head from "next/head";
import Image from "next/image";
import { useEffect, useRef, useState } from "react";
import useSWR from "swr";
import { post } from "../libs/fetcher";
import styles from "../styles/Home.module.css";
import { Howl, Howler } from "howler";
// import mp3 from "../demo/shit.mp3";
import {
  map,
  T,
  F,
  prop,
  o,
  ifElse,
  over,
  lensProp,
  set,
  find,
  propEq,
  isNil,
} from "ramda";
import Player from "../components/Player";
import PlayList, { PlayListData } from "../components/PlayList";

let mapList = (item) =>
  map((it) => {
    return over(lensProp("isPlaying"), it === item ? T : F, it);
  });

export default function Home() {
  const { data: filesList } = useSWR("/api/getFiles");
  const [playList, setplayList] = useState<PlayListData>([]);
  const [showPlayList, setShowPlayList] = useState(false);

  const playingItem = find(propEq("isPlaying", true), playList);
  const isPlaying = !isNil(playingItem);

  console.log(isPlaying);

  const clickItemHandler = (item) => {
    setplayList(mapList(item));
  };

  // useEffect(() => {
  //   let shit = new Howl({
  //     src: ["/assets/shit.mp3"],
  //     onload: (...args) => {
  //       console.log("1111111", ...args);
  //     },
  //   });
  //   shit.play();
  // }, []);

  useEffect(() => {
    if (!filesList) {
      return;
    }
    setplayList(
      filesList.files.map((item) => ({
        howl: new Howl({
          src: [item["@microsoft.graph.downloadUrl"]],
          // html5: true,
          onload: (...args) => {
            console.log(...args);
          },
        }),

        isPlaying: false,
        id: item.id,
        name: item.name,
      }))
    );
  }, [filesList]);

  useEffect(() => {
    if (!playingItem) {
      return;
    }
    playingItem.howl.play();
    return () => {
      playingItem.howl.stop();
    };
  }, [playingItem]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="w-full h-full">
        <Player
          isPlaying={isPlaying}
          currentTime={0}
          totalTime={0}
          musicTitle={""}
          onPause={() => {}}
        ></Player>
        <PlayList
          playListData={playList}
          onClickItem={clickItemHandler}
        ></PlayList>
      </main>
    </>
  );
}
